// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @default(uuid()) @id
  name      String
  email     String  @unique
  password  String
  userType  Role    @default(user)
  sales     Sale[]
  rentals   Rental[]

  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 

  @@map("users")
}

model Car {
  id                String     @default(uuid()) @id
  make              String
  model             String
  year              Int
  vin               String       @unique
  color             String
  mileage           Int
  purchasePrice     Float
  rentalPricePerDay Float
  status            CarStatus
  sales             Sale?
  rentals           Rental[]

  @@map("cars")
}

model Sale {
  id         String      @id @default(uuid())
  carId      String      @unique
  userId     String
  saleDate   DateTime
  salePrice  Float
  car        Car      @relation(fields: [carId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@map("sales")
}

model Rental {
  id               String      @id @default(uuid())
  carId            String
  userId           String
  rentalStartDate  DateTime
  rentalEndDate    DateTime
  rentalPrice      Float
  car              Car  @relation(fields: [carId], references: [id])
  user             User @relation(fields: [userId], references: [id])

  @@map("rentals")
}

enum Role {
  admin
  user

  @@map("role")
}

enum CarStatus {
  available
  sold
  rented

  @@map("cars_status")
}